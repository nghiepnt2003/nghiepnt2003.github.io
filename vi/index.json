[
{
	"uri": "http://nghiepnt2003.github.io/vi/",
	"title": "AWS Basic Labs: Tạo và Cấu Hình AWS VPC với Public và Private Subnets, Internet Gateway, Route Tables, và Security Groups",
	"tags": [],
	"description": "",
	"content": "AWS Basic Labs: AWS Basic Labs: Tạo và Cấu Hình AWS VPC với Public và Private Subnets, Internet Gateway, Route Tables, và Security Groups Tổng quan Trong bài lab này, bạn sẽ học cách tạo và cấu hình một AWS VPC với cả Public và Private Subnets. Bạn sẽ thực hiện các bước thiết lập các thành phần mạng cơ bản bao gồm:\nTạo VPC mới: Tạo một VPC với dải CIDR tùy chỉnh. Tạo Public và Private Subnets: Phân chia VPC thành các Public và Private Subnets để quản lý lưu lượng mạng. Tạo và cấu hình Internet Gateway: Kết nối VPC của bạn với Internet để các instance trong Public Subnet có thể giao tiếp với thế giới bên ngoài. Tạo và cấu hình Route Tables: Định tuyến lưu lượng đến Internet Gateway cho Public Subnet và thiết lập các Route Table cho Private Subnet. Cấu hình Security Groups: Thiết lập các quy tắc bảo mật cho phép hoặc từ chối lưu lượng mạng đến các instance trong VPC. Tạo và kiểm tra EC2 Instances (Tùy chọn): Khởi chạy các instance EC2 để kiểm tra kết nối mạng và đảm bảo cấu hình hoạt động như mong đợi. Dọn dẹp tài nguyên: Xóa các tài nguyên đã tạo sau khi hoàn tất bài lab. Bài lab này cung cấp hướng dẫn chi tiết từng bước để giúp bạn thiết lập một môi trường mạng AWS cơ bản, phù hợp cho các nhu cầu triển khai ứng dụng và dịch vụ trong VPC.\nNội dung Giới thiệu về VPC và Subnets Các bước chuẩn bị Tạo VPC mới Tạo Public và Private Subnets Tạo và cấu hình Internet Gateway Tạo và cấu hình Route Tables Cấu hình Security Groups Tạo và kiểm tra EC2 Instances (Tùy chọn) Dọn dẹp tài nguyên "
},
{
	"uri": "http://nghiepnt2003.github.io/vi/1-introduce/",
	"title": "Giới thiệu",
	"tags": [],
	"description": "",
	"content": "Virtual Private Cloud (VPC) Virtual Private Cloud (VPC) là một dịch vụ của Amazon Web Services (AWS) cho phép bạn tạo một mạng lưới ảo riêng biệt trong môi trường đám mây AWS. Bạn có thể cấu hình VPC của mình để đáp ứng các yêu cầu về bảo mật, kết nối, và phân phối tài nguyên, đồng thời cung cấp một môi trường mạng tách biệt cho các ứng dụng của bạn.\nCác thành phần chính của VPC CIDR Block: Đây là dải IP mà bạn phân bổ cho VPC của mình. Ví dụ: 10.0.0.0/16. Subnets: Là các phân vùng của VPC, giúp bạn tổ chức tài nguyên mạng trong các vùng phân chia (subnet) khác nhau. Subnets có thể được phân loại thành Public (có thể truy cập từ internet) và Private (không thể truy cập trực tiếp từ internet). Internet Gateway (IGW): Là một gateway mà bạn gán cho VPC để cho phép các instance trong Public Subnet kết nối với internet. Route Tables: Xác định cách lưu lượng mạng được điều hướng giữa các subnet và các thành phần mạng khác. NAT Gateway: Cung cấp khả năng truy cập internet cho các instance trong Private Subnet thông qua Internet Gateway. Public và Private Subnets Public Subnets Public Subnets là các subnet có thể truy cập trực tiếp từ internet. Các instance trong Public Subnets thường có IP công cộng và có thể giao tiếp với các dịch vụ internet. Ví dụ: web servers, load balancers.\nPrivate Subnets Private Subnets là các subnet không thể truy cập trực tiếp từ internet. Các instance trong Private Subnets thường không có IP công cộng và chỉ có thể giao tiếp với các tài nguyên trong cùng VPC hoặc thông qua NAT Gateway.\nTại sao cần Public và Private Subnets? Việc phân chia giữa Public và Private Subnets giúp bạn cải thiện bảo mật và tổ chức mạng của mình. Các ứng dụng web hoặc dịch vụ cần truy cập internet có thể được đặt trong Public Subnets, trong khi các cơ sở dữ liệu hoặc dịch vụ backend có thể được đặt trong Private Subnets để bảo vệ khỏi truy cập trực tiếp từ bên ngoài.\nTrong bài lab tiếp theo, chúng ta sẽ hướng dẫn cách chuẩn bị và thực hiện các bước để tạo một VPC với cả Public và Private Subnets trên AWS.\n"
},
{
	"uri": "http://nghiepnt2003.github.io/vi/2-prerequiste/",
	"title": "Các bước chuẩn bị",
	"tags": [],
	"description": "",
	"content": "Trước khi bắt đầu lab để tạo một AWS VPC với Public và Private Subnets, bạn cần thực hiện một số bước chuẩn bị quan trọng. Những bước chuẩn bị này sẽ đảm bảo rằng bạn có mọi thứ cần thiết để thực hiện các bước cấu hình và triển khai một cách hiệu quả.\n1. Tạo tài khoản AWS Nếu bạn chưa có tài khoản AWS, bạn cần tạo một tài khoản mới. Truy cập vào AWS Management Console và làm theo hướng dẫn để đăng ký.\n2. Cấu hình quyền truy cập Đảm bảo rằng tài khoản AWS của bạn có quyền truy cập đầy đủ để tạo và quản lý các tài nguyên mạng như VPC, Subnets, Internet Gateway, và Route Tables. Bạn có thể cần các quyền sau:\nNếu bạn đang sử dụng IAM (Identity and Access Management), hãy đảm bảo rằng người dùng hoặc vai trò IAM của bạn có các quyền này.\n3. Cài đặt AWS CLI (Tùy chọn) Để dễ dàng quản lý các tài nguyên AWS và thực hiện các lệnh từ dòng lệnh, bạn có thể cài đặt AWS CLI. Để cài đặt, bạn có thể làm theo hướng dẫn tại AWS CLI User Guide.\n4. Làm quen với AWS Management Console Truy cập vào AWS Management Console và làm quen với giao diện người dùng. Hãy chắc chắn rằng bạn biết cách điều hướng qua các phần như VPC Dashboard, EC2 Dashboard, và Route Tables.\n5. Xác định các yêu cầu mạng Trước khi bắt đầu, hãy xác định các yêu cầu mạng của bạn, bao gồm:\nDải IP cho VPC của bạn (CIDR Block). Ví dụ: 10.0.0.0/16. Dải IP cho Public và Private Subnets. Ví dụ: Public Subnet 10.0.1.0/24 và Private Subnet 10.0.2.0/24. 6. Chuẩn bị thông tin cấu hình Ghi lại các thông tin cấu hình cần thiết, bao gồm:\nCIDR Block cho VPC và các Subnets. Tên và mô tả cho các thành phần mạng (nếu cần). Các yêu cầu về bảo mật, bao gồm các quy tắc trong Security Groups. Khi bạn đã hoàn tất các bước chuẩn bị này, bạn sẽ sẵn sàng để bắt đầu các bước thực hành trong lab và tạo cấu hình cho VPC của bạn.\n"
},
{
	"uri": "http://nghiepnt2003.github.io/vi/3-create-vpc/",
	"title": "Tạo VPC ",
	"tags": [],
	"description": "",
	"content": "Trong bước này, bạn sẽ học cách tạo một Virtual Private Cloud (VPC) mới trong AWS. VPC là môi trường mạng ảo mà bạn có thể cấu hình để triển khai các tài nguyên AWS, như EC2 instances, trong một mạng lưới an toàn và tách biệt.\nNội dung Mở dịch vụ VPC Trong bảng điều khiển AWS Management Console, tìm và chọn VPC từ phần Networking \u0026amp; Content Delivery hoặc gõ \u0026ldquo;VPC\u0026rdquo; trên thanh tìm kiếm. Trong bảng điều khiển VPC, chọn Your VPCs từ thanh điều hướng bên trái.\nNhấn nút Create VPC. Cấu hình VPC Name tag: Nhập tên cho VPC của bạn. IPv4 CIDR block: Nhập dải IP cho VPC.Dải IP này sẽ xác định phạm vi địa chỉ IP mà VPC của bạn sẽ sử dụng. IPv6 CIDR block: (Tùy chọn) Nếu bạn muốn sử dụng IPv6, bạn có thể chọn một dải IPv6 CIDR block. Nếu không, để trống. Tenancy: Chọn Default. Điều này cho phép bạn sử dụng các instances EC2 với shared hardware. Nếu bạn cần dedicated hardware, bạn có thể chọn Dedicated. Xác nhận và tạo Nhấn nút Create VPC để tạo VPC mới. Sau khi hoàn tất nhấn vào nút View VPC Kiểm tra VPC mới Quay lại bảng điều khiển Your VPCs và xác nhận rằng VPC mới của bạn đã được tạo thành công. Bạn sẽ thấy tên, ID, và dải IP CIDR của VPC. "
},
{
	"uri": "http://nghiepnt2003.github.io/vi/4-create-subnets/",
	"title": "Tạo Public và Private Subnets",
	"tags": [],
	"description": "",
	"content": "Sau khi đã tạo VPC, bước tiếp theo là tạo các Public và Private Subnets trong VPC này. Các Subnets giúp bạn phân chia mạng của bạn thành các vùng khác nhau để quản lý lưu lượng mạng và bảo mật.\nBước 1: Tạo Public Subnet Mở dịch vụ VPC:\nTrong bảng điều khiển AWS Management Console, tìm và chọn VPC từ phần Networking \u0026amp; Content Delivery hoặc gõ \u0026ldquo;VPC\u0026rdquo; trên thanh tìm kiếm. Chọn Subnets:\nTrong thanh điều hướng bên trái, chọn Subnets. **Nhấn nút **Create subnet**:\nNhấn nút Create subnet để bắt đầu quá trình tạo subnet mới. Cấu hình Public Subnet:\nVPC: Chọn VPC bạn đã tạo từ menu dropdown. Name tag: Nhập tên cho Public Subnet, ví dụ: PublicSubnet. Availability Zone: Chọn một Availability Zone (AZ) mà bạn muốn Public Subnet nằm trong đó. IPv4 CIDR block: Nhập dải IP cho Public Subnet. Dải IP này phải nằm trong dải CIDR của VPC bạn đã tạo. IPv6 CIDR block: (Tùy chọn) Nếu bạn đang sử dụng IPv6, bạn có thể chọn dải IPv6 CIDR block. Nếu không, để trống. **Nhấn nút **Create subnet**:\nNhấn nút Create subnet để tạo Public Subnet. Bước 2: Tạo Private Subnet Chọn Subnets:\nTrong thanh điều hướng bên trái, chọn Subnets. **Nhấn nút **Create subnet**:\nNhấn nút Create subnet để bắt đầu quá trình tạo subnet mới. Cấu hình Private Subnet:\nVPC: Chọn VPC bạn đã tạo từ menu dropdown. Name tag: Nhập tên cho Private Subnet, ví dụ: PrivateSubnet.\nAvailability Zone: Chọn một Availability Zone (AZ) mà bạn muốn Private Subnet nằm trong đó.\nIPv4 CIDR block: Nhập dải IP cho Private Subnet, ví dụ: 10.0.2.0/24. Dải IP này phải nằm trong dải CIDR của VPC bạn đã tạo.\nIPv6 CIDR block: (Tùy chọn) Nếu bạn đang sử dụng IPv6, bạn có thể chọn dải IPv6 CIDR block. Nếu không, để trống. **Nhấn nút **Create subnet**:\nNhấn nút Create subnet để tạo Private Subnet. Bước 3: Xác nhận các Subnets mới Quay lại bảng điều khiển Subnets:\nTrong bảng điều khiển Subnets, bạn sẽ thấy danh sách các Subnets bạn đã tạo. Kiểm tra thông tin Subnets:\nXác nhận rằng Public Subnet và Private Subnet mới của bạn đã được tạo thành công. Bạn sẽ thấy tên, ID, và dải IP CIDR của từng Subnet. Với Public và Private Subnets được tạo, bạn đã hoàn tất việc phân chia mạng trong VPC của bạn. Các bước tiếp theo sẽ hướng dẫn bạn cách cấu hình Internet Gateway và Route Tables để hoàn thiện môi trường mạng của bạn.\n"
},
{
	"uri": "http://nghiepnt2003.github.io/vi/5-create-configure-igw/",
	"title": "Tạo và cấu hình Internet Gateway",
	"tags": [],
	"description": "",
	"content": "Internet Gateway (IGW) là một thành phần quan trọng trong kiến trúc mạng của AWS, giúp các instances trong subnet có thể giao tiếp với internet. Trong phần này, bạn sẽ học cách tạo và cấu hình Internet Gateway để kết nối Public Subnet với internet.\nBước 1: Tạo Internet Gateway (IGW) Mở dịch vụ VPC:\nTruy cập vào VPC Dashboard trong AWS Management Console hoặc gõ \u0026ldquo;VPC\u0026rdquo; trên thanh tìm kiếm. Chọn Internet Gateways:\nTrong bảng điều khiển VPC, chọn Internet Gateways từ thanh điều hướng bên trái. Nhấn nút Create internet gateway:\nNhấn nút Create internet gateway để bắt đầu quá trình tạo Internet Gateway. Cấu hình IGW:\nName tag: Nhập tên cho Internet Gateway của bạn, ví dụ: MyInternetGateway. Nhấn Create internet gateway để hoàn tất quá trình tạo. Attach Internet Gateway vào VPC:\nSau khi tạo IGW, nhấn nút Actions và chọn Attach to VPC. Trong cửa sổ hiện ra, chọn VPC mà bạn đã tạo hoặc VPC mặc định, sau đó nhấn Attach internet gateway. Bước 2: Cấu hình Route Table cho Public Subnet Thêm Route đến Internet Gateway:\nChọn tab Routes và nhấn Edit routes. Nhấn Add route: Destination: Nhập 0.0.0.0/0 (đây là dải địa chỉ cho tất cả lưu lượng internet). Target: Chọn Internet Gateway mà bạn đã tạo từ danh sách. Nhấn nút Save changes để lưu thay đổi.\nBước 3: Kiểm tra lại cấu hình Kiểm tra lại Internet Gateway: Đảm bảo rằng IGW đã được Attach với VPC mà bạn đang sử dụng. Kiểm tra Route Table: Xác nhận rằng Route Table của Public Subnet có mục 0.0.0.0/0 với Target là Internet Gateway. Kết quả Sau khi hoàn tất các bước trên, Internet Gateway (IGW) đã được tạo và gắn vào VPC của bạn. IGW sẽ hoạt động như một cổng để các instances trong VPC có thể giao tiếp với internet. Lưu ý rằng để Public Subnet có thể kết nối với internet, bạn vẫn cần cấu hình Route Table cho Public Subnet, nhưng điều này sẽ được thực hiện ở phần sau.\n"
},
{
	"uri": "http://nghiepnt2003.github.io/vi/6-create-configure-route-tables/",
	"title": "Tạo và cấu hình Route Tables",
	"tags": [],
	"description": "",
	"content": "Route Tables là thành phần quan trọng trong AWS VPC, giúp điều hướng lưu lượng mạng giữa các subnet cũng như giữa VPC với internet. Trong phần này, bạn sẽ tạo và cấu hình các Route Table để kết nối Public và Private Subnets.\nBước 1: Tạo Route Table cho Public Subnet Truy cập dịch vụ VPC:\nTruy cập vào VPC Dashboard trong AWS Management Console hoặc gõ \u0026ldquo;VPC\u0026rdquo; trên thanh tìm kiếm. Chọn Route Tables:\nTrong VPC Dashboard, chọn Route Tables từ thanh điều hướng bên trái. Nhấn nút Create Route Table:\nNhấn Create route table để tạo Route Table mới. Cấu hình Route Table:\nName: Đặt tên cho Route Table (ví dụ: my-route-table). VPC: Chọn VPC mà bạn đã tạo ở phần trước. Nhấn nút Create route table để hoàn tất. Bước 2: Cấu hình Route cho Public Subnet Chọn Route Table vừa tạo:\nChọn Route Table mà bạn vừa tạo (ví dụ: PublicRouteTable). Thêm route tới Internet Gateway:\nChuyển đến tab Routes và nhấn Edit routes. Nhấn Add route và cấu hình như sau: Destination: Nhập 0.0.0.0/0 (đại diện cho toàn bộ địa chỉ IP trên internet). Target: Chọn Internet Gateway (IGW) mà bạn đã tạo trước đó từ danh sách. Lưu cấu hình:\nNhấn Save routes để lưu cấu hình Route Table. Liên kết với Public Subnet:\nChuyển sang tab Subnet associations và nhấn Edit subnet associations. Chọn Public Subnet của bạn từ danh sách và nhấn Save associations để liên kết Route Table với Public Subnet. Bước 3: Tạo Route Table cho Private Subnet Nhấn Create Route Table:\nTạo thêm một Route Table mới cho Private Subnet (ví dụ: PrivateRouteTable). Không thêm Internet Gateway cho Private Subnet:\nTrong Route Table của Private Subnet, không thêm route 0.0.0.0/0 trỏ tới Internet Gateway, để đảm bảo rằng Private Subnet không thể kết nối trực tiếp với internet. Liên kết với Private Subnet:\nTương tự như bước trên, trong tab Subnet associations, chọn Private Subnet và nhấn Save associations. Kết quả Public Subnet: Đã được gắn Route Table với route đến Internet Gateway, cho phép EC2 instances trong Public Subnet có thể truy cập internet. Private Subnet: Có Route Table riêng, không được phép truy cập trực tiếp internet, đảm bảo tính bảo mật cho các tài nguyên bên trong. "
},
{
	"uri": "http://nghiepnt2003.github.io/vi/7-configure-security-groups/",
	"title": "Cấu hình Security Groups",
	"tags": [],
	"description": "",
	"content": "Security Groups đóng vai trò như các bức tường lửa ở cấp độ instance trong AWS, giúp kiểm soát lưu lượng vào và ra của các tài nguyên trong VPC. Trong phần này, bạn sẽ tạo và cấu hình Security Groups để bảo vệ các instances của mình.\nBước 1: Tạo Security Group mới Mở dịch vụ EC2:\nTruy cập vào EC2 Dashboard trong AWS Management Console hoặc gõ EC2 trên thanh tìm kiếm. Chọn Security Groups:\nTrong thanh điều hướng bên trái, chọn Security Groups dưới phần Network \u0026amp; Security. Nhấn Create security group:\nNhấn nút Create security group để bắt đầu quá trình tạo mới Security Group. Cấu hình Security Group:\nName tag: Đặt tên cho Security Group của bạn, ví dụ: MyPublicSG. Description: Nhập mô tả, ví dụ: Security group for public instances. VPC: Chọn VPC mà bạn đã tạo ở các bước trước. Bước 2: Cấu hình Inbound Rules (Luồng vào) Thêm Inbound Rule:\nNhấn Add rule để thêm các quy tắc inbound. Type: Chọn HTTP (hoặc dịch vụ mà bạn muốn cho phép). Source: Chọn Anywhere (0.0.0.0/0) nếu bạn muốn cho phép truy cập từ bất kỳ địa chỉ IP nào. Lặp lại bước trên để thêm quy tắc cho các dịch vụ khác, như HTTPS hoặc SSH (nếu cần truy cập SSH vào instance). Thêm Inbound Rule cho SSH (tuỳ chọn):\nType: Chọn SSH. Source: Chọn My IP để chỉ cho phép kết nối SSH từ địa chỉ IP của bạn. Lưu cấu hình:\nSau khi thêm các quy tắc, nhấn Create security group để hoàn tất. Bước 3: Cấu hình Outbound Rules (Luồng ra) Outbound Rules mặc định: Security Groups mặc định cho phép tất cả lưu lượng outbound. Bạn có thể kiểm tra phần Outbound rules và giữ nguyên cấu hình này hoặc tùy chỉnh theo nhu cầu cụ thể. Bước 4: Gán Security Group cho Instance Gán Security Group cho Instance:\nKhi bạn tạo mới hoặc khởi chạy một instance EC2, hãy chắc chắn rằng bạn đã gán Security Group vừa tạo cho instance đó. Kiểm tra kết nối:\nSau khi gán Security Group, bạn có thể kiểm tra kết nối bằng cách truy cập vào IP public của instance để đảm bảo các quy tắc inbound như HTTP, HTTPS hoặc SSH hoạt động đúng. Kết quả Security Group đã được cấu hình thành công và gán cho EC2 Instance của bạn. Các quy tắc inbound và outbound đã được thiết lập để bảo vệ tài nguyên mạng, cho phép kết nối đến các dịch vụ mà bạn mong muốn.\n"
},
{
	"uri": "http://nghiepnt2003.github.io/vi/8-create-test-ec2/",
	"title": "Tạo và kiểm tra EC2 Instances (Tùy chọn)",
	"tags": [],
	"description": "",
	"content": "Trong phần này, bạn sẽ tạo một hoặc nhiều instance EC2 để kiểm tra kết nối mạng của các Public và Private Subnets mà bạn đã thiết lập trước đó. Việc này giúp đảm bảo rằng các instance có thể truy cập Internet (đối với Public Subnet) hoặc không (đối với Private Subnet) tùy theo cấu hình của bạn.\nBước 1: Tạo Instance EC2 Mở dịch vụ EC2:\nTruy cập vào EC2 Dashboard trong AWS Management Console hoặc gõ \u0026ldquo;EC2\u0026rdquo; trên thanh tìm kiếm. Nhấn nút Launch Instance:\nNhấn nút Launch Instance để bắt đầu quá trình tạo một instance mới. Chọn AMI (Amazon Machine Image):\nChọn một Amazon Machine Image (AMI) phù hợp, chẳng hạn như Amazon Linux 2 AMI hoặc Ubuntu Server. Đây là hình ảnh hệ điều hành cho instance của bạn. Chọn Instance Type:\nChọn loại instance phù hợp với nhu cầu của bạn, chẳng hạn như t2.micro (miễn phí nếu bạn nằm trong giới hạn sử dụng Free Tier). Cấu hình Instance:\nNetwork: Chọn VPC mà bạn đã tạo. Subnet: Chọn Public Subnet (hoặc Private Subnet nếu bạn muốn kiểm tra sự kết nối không internet). Auto-assign Public IP: Đối với Public Subnet, hãy chọn Enable để gán IP công khai cho instance. Cấu hình Security Group:\nChọn Security Group đã tạo trong các bước trước hoặc tạo một Security Group mới. Đảm bảo rằng bạn đã mở các cổng cần thiết như HTTP (80), HTTPS (443), và SSH (22) nếu bạn cần truy cập vào instance. Review và Launch:\nXem lại cấu hình instance của bạn và nhấn Launch. Chọn một key pair để truy cập vào instance. Nếu bạn chưa có key pair, bạn cần tạo mới và tải xuống. Sau đó, nhấn Launch Instances. Kiểm tra Instance:\nTruy cập vào Instances trong EC2 Dashboard để kiểm tra trạng thái của instance. Bạn sẽ thấy trạng thái là running khi instance đã được khởi động thành công. Bước 2: Kiểm tra Kết Nối Kết nối với Instance EC2:\nĐối với instance trong Public Subnet, bạn có thể kết nối qua SSH (nếu bạn đã chọn Amazon Linux hoặc Ubuntu) hoặc RDP (nếu bạn chọn Windows) bằng cách sử dụng IP công khai. Sử dụng lệnh SSH tương tự như sau: ssh -i \u0026#34;your-key.pem\u0026#34; ec2-user@\u0026lt;public-ip\u0026gt; Đối với instance trong Private Subnet, bạn cần kết nối thông qua một instance trong Public Subnet với chức năng bastion hoặc VPN. Kiểm tra kết nối Internet:\nĐối với instance trong Public Subnet, kiểm tra khả năng truy cập internet bằng cách sử dụng lệnh ping hoặc curl đến một trang web, ví dụ: curl http://www.google.com Đối với instance trong Private Subnet, kiểm tra rằng nó không thể truy cập Internet (nếu bạn đã cấu hình đúng), nhưng vẫn có thể kết nối đến các dịch vụ khác trong VPC. Kết quả Sau khi hoàn tất các bước trên, bạn sẽ có thể xác nhận rằng các instance EC2 trong Public Subnet có thể truy cập Internet, trong khi các instance trong Private Subnet không thể. Điều này cho phép bạn đảm bảo rằng các cấu hình mạng của bạn hoạt động như mong đợi.\n"
},
{
	"uri": "http://nghiepnt2003.github.io/vi/9-cleanup/",
	"title": "Dọn dẹp tài nguyên",
	"tags": [],
	"description": "",
	"content": "Sau khi hoàn tất bài lab và kiểm tra kết quả, bạn nên dọn dẹp các tài nguyên AWS mà bạn đã tạo để tránh phát sinh chi phí không mong muốn. Trong phần này, bạn sẽ học cách xóa các thành phần như VPC, Subnets, Internet Gateway, Route Tables, Security Groups, và EC2 Instances mà bạn đã tạo trong quá trình lab.\nBước 1: Xóa EC2 Instances Mở dịch vụ EC2:\nTruy cập vào EC2 Dashboard trong AWS Management Console hoặc gõ \u0026ldquo;EC2\u0026rdquo; trên thanh tìm kiếm. Chọn Instances:\nTrong Instances, chọn các instance mà bạn muốn xóa. Đảm bảo rằng bạn đã chọn đúng instance cần xóa. Nhấn nút Actions:\nNhấn nút Actions, sau đó chọn Instance State \u0026gt; Terminate. Xác nhận xóa:\nXác nhận rằng bạn muốn terminate các instance đã chọn. Sau khi terminate, các instance sẽ được xóa khỏi danh sách và sẽ không còn phát sinh chi phí. Bước 2: Xóa Internet Gateway Mở dịch vụ VPC:\nTruy cập vào VPC Dashboard trong AWS Management Console. Chọn Internet Gateways:\nTrong bảng điều khiển VPC, chọn Internet Gateways từ thanh điều hướng bên trái. Chọn và Detach Internet Gateway:\nChọn Internet Gateway mà bạn muốn xóa. Nhấn nút Actions và chọn Detach from VPC. Xóa Internet Gateway:\nSau khi đã detachment, chọn Internet Gateway đó, nhấn Actions và chọn Delete internet gateway. Bước 3: Xóa Route Tables Mở dịch vụ VPC:\nTruy cập vào VPC Dashboard trong AWS Management Console hoặc gõ \u0026ldquo;VPC\u0026rdquo; trên thanh tìm kiếm. Chọn Route Tables:\nTrong bảng điều khiển VPC, chọn Route Tables từ thanh điều hướng bên trái. Chọn và xóa Route Table:\nChọn Route Table mà bạn muốn xóa. Nhấn nút Actions và chọn Delete route table. Lưu ý rằng bạn không thể xóa Route Table mặc định của VPC.\nBước 4: Xóa Security Groups Mở dịch vụ VPC:\nTruy cập vào VPC Dashboard trong AWS Management Console hoặc gõ \u0026ldquo;VPC\u0026rdquo; trên thanh tìm kiếm. Chọn Security Groups:\nTrong bảng điều khiển VPC, chọn Security Groups từ thanh điều hướng bên trái. Chọn và xóa Security Group:\nChọn Security Group mà bạn muốn xóa. Nhấn nút Actions và chọn Delete security group. Lưu ý rằng bạn không thể xóa Security Group mặc định. Bước 5: Xóa Subnets Mở dịch vụ VPC:\nTruy cập vào VPC Dashboard trong AWS Management Console hoặc gõ \u0026ldquo;VPC\u0026rdquo; trên thanh tìm kiếm. Chọn Subnets:\nTrong bảng điều khiển VPC, chọn Subnets từ thanh điều hướng bên trái. Chọn và xóa Subnet:\nChọn Subnet mà bạn muốn xóa. Nhấn nút Actions và chọn Delete subnet. Lưu ý rằng bạn cần phải xóa tất cả các resources trong Subnet trước khi có thể xóa Subnet đó. Bước 6: Xóa VPC Mở dịch vụ VPC:\nTruy cập vào VPC Dashboard trong AWS Management Console hoặc gõ \u0026ldquo;VPC\u0026rdquo; trên thanh tìm kiếm. Chọn VPCs:\nTrong bảng điều khiển VPC, chọn VPCs từ thanh điều hướng bên trái. Chọn và xóa VPC:\nChọn VPC mà bạn muốn xóa. Nhấn nút Actions và chọn Delete VPC. Lưu ý rằng bạn cần phải xóa tất cả các resources trong VPC trước khi có thể xóa VPC đó. Kết quả Sau khi hoàn tất các bước trên, tất cả các tài nguyên mà bạn đã tạo trong bài lab sẽ được xóa khỏi tài khoản AWS của bạn, giúp bạn tránh phát sinh chi phí không mong muốn. Bạn có thể kiểm tra lại các dịch vụ AWS để đảm bảo rằng không còn tài nguyên nào liên quan đến bài lab còn tồn tại.\n"
},
{
	"uri": "http://nghiepnt2003.github.io/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://nghiepnt2003.github.io/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]